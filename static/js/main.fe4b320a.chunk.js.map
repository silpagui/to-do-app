{"version":3,"sources":["core/core.constants.js","components/NavButton/NavButton.component.js","components/Nav/Nav.component.js","components/AddTaskForm/AddTaskForm.component.js","components/TaskItem/TaskItem.component.js","components/TaskList/TaskList.component.js","components/Footer/Footer.component.js","components/Confirmation/Confirmation.component.js","components/Copyright/Copyright.component.js","components/App/App.component.js","core/core.utils.js","index.js"],"names":["assetsURL","process","statusTask","sections","localStorageKeys","buttonsTitles","NavButton","isActive","onClick","title","className","Nav","activeSection","setActiveSection","map","AddTaskForm","taskList","task","setTaskList","setTask","input","useRef","onSubmit","event","preventDefault","newList","concat","id","Date","status","avoidDelay","current","focus","type","name","placeholder","value","required","onChange","target","ref","TaskItem","setShowDeleteTaskConfirmation","taskItem","position","isChecked","delayElementsStyle","animationDelay","style","htmlFor","checked","newStatus","updatedList","item","message","show","handleOnYes","filteredList","filter","width","height","viewBox","href","TaskList","filteredTasks","Footer","setShowDeletionConfirmation","Confirmation","onClose","question","isOpen","handleOnClose","Copyright","App","useState","localStorage","getItem","JSON","parse","error","console","warn","getTaskListFromCache","confirmation","setConfirmation","shouldShowCompleted","shouldShowActive","useEffect","setItem","stringify","setTaskListToCache","document","getElementsByTagName","overflow","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.fe4b320a.chunk.js","sourcesContent":["export const publicURL = process.env.PUBLIC_URL;\nexport const assetsURL = `${publicURL}/assets/`;\n\nexport const statusTask = {\n  ACTIVE: \"active\",\n  DONE: \"done\",\n};\n\nexport const sections = {\n  ALL: \"All\",\n  ACTIVE: \"Active\",\n  COMPLETED: \"Completed\",\n};\n\nexport const localStorageKeys = {\n  TASK_LIST: \"taskList\",\n};\n\nexport const buttonsTitles = [\n  sections.ALL,\n  sections.ACTIVE,\n  sections.COMPLETED,\n];\n","import React from \"react\";\nimport \"./NavButton.styles.scss\";\n\nexport function NavButton({ isActive, onClick, title }) {\n  return (\n    <button\n      className={`tab-button ${isActive ? \"tab-button--selected\" : \"\"}`}\n      onClick={onClick}\n    >\n      {title}\n    </button>\n  );\n}\n","import React from \"react\";\nimport { buttonsTitles } from \"../../core/core.constants\";\nimport { NavButton } from \"../NavButton/NavButton.component\";\nimport \"./Nav.styles.scss\";\n\nexport function Nav({ activeSection, setActiveSection }) {\n  return (\n    <nav className=\"app-nav\">\n      {buttonsTitles.map((title) => {\n        const isActive = activeSection === title;\n        const onClick = () => {\n          setActiveSection(title);\n        };\n        return (\n          <NavButton\n            key={title}\n            isActive={isActive}\n            onClick={onClick}\n            title={title}\n          />\n        );\n      })}\n    </nav>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { statusTask } from \"../../core/core.constants\";\nimport \"./AddTaskForm.styles.scss\";\n\nexport function AddTaskForm({ taskList, task, setTaskList, setTask }) {\n  const input = useRef();\n\n  return (\n    <form\n      className=\"form-container\"\n      onSubmit={function (event) {\n        event.preventDefault();\n        const newList = taskList.concat({\n          id: +new Date(),\n          title: task,\n          status: statusTask.ACTIVE,\n          avoidDelay: true,\n        });\n        setTaskList(newList);\n        setTask(\"\");\n        input.current.focus();\n      }}\n    >\n      <input\n        className=\"input-add\"\n        type=\"text\"\n        name=\"add-details\"\n        placeholder=\"add details\"\n        value={task}\n        required\n        onChange={function (event) {\n          setTask(event.target.value);\n        }}\n        ref={input}\n      ></input>\n      <button className=\"action-button action-button--add\">Add</button>\n    </form>\n  );\n}\n","import React from \"react\";\nimport \"./TaskItem.styles.scss\";\nimport { assetsURL, statusTask } from \"../../core/core.constants\";\n\nexport function TaskItem({\n  taskList,\n  setTaskList,\n  setShowDeleteTaskConfirmation,\n  taskItem,\n  position,\n  avoidDelay,\n}) {\n  const isChecked = taskItem.status === \"done\";\n  const delayElementsStyle =\n    position <= 10 && !avoidDelay\n      ? { animationDelay: `${0.3 * position}s` }\n      : {};\n\n  return (\n    <li className=\"item-task\" style={delayElementsStyle}>\n      <label\n        htmlFor={`task-${taskItem.id}`}\n        className=\"item-checkbox\"\n        title={taskItem.title}\n      >\n        <input\n          type=\"checkbox\"\n          name={`task-${taskItem.id}`}\n          id={`task-${taskItem.id}`}\n          className=\"item-checkbox\"\n          checked={isChecked}\n          onChange={() => {\n            const newStatus = isChecked ? statusTask.ACTIVE : statusTask.DONE;\n\n            const updatedList = taskList.map((item) => {\n              if (taskItem.id === item.id) {\n                item.status = newStatus;\n              }\n              return item;\n            });\n\n            setTaskList(updatedList);\n          }}\n        />\n        <span className=\"item-title\">{taskItem.title}</span>\n      </label>\n      <button\n        className=\"trash-button\"\n        onClick={() => {\n          setShowDeleteTaskConfirmation({\n            message: `Are you sure you want to delete \"${taskItem.title}\"?`,\n            show: true,\n            handleOnYes: () => {\n              const filteredList = taskList.filter((task) => {\n                return task.id !== taskItem.id;\n              });\n              setTaskList(filteredList);\n            },\n          });\n        }}\n      >\n        <svg\n          width=\"59\"\n          height=\"80\"\n          viewBox=\"0 0 59 80\"\n          className=\"trashcan-icon\"\n        >\n          <use href={`${assetsURL}vectors/trashcan.svg#trashcan`} />\n        </svg>\n      </button>\n    </li>\n  );\n}\n","import React from \"react\";\nimport \"./TaskList.styles.scss\";\n\nimport { TaskItem } from \"../TaskItem/TaskItem.component\";\n\nexport function TaskList({\n  taskList,\n  setTaskList,\n  filteredTasks,\n  setShowDeleteTaskConfirmation,\n}) {\n  return (\n    <ul className=\"list-task\">\n      {filteredTasks.map((taskItem, position) => {\n        return (\n          <TaskItem\n            avoidDelay={taskItem.avoidDelay}\n            position={position}\n            key={taskItem.id}\n            taskItem={taskItem}\n            taskList={taskList}\n            setTaskList={setTaskList}\n            setShowDeleteTaskConfirmation={setShowDeleteTaskConfirmation}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n","import React from \"react\";\nimport { assetsURL } from \"../../core/core.constants\";\nimport \"./Footer.styles.scss\";\n\nexport function Footer({ setTaskList, setShowDeletionConfirmation }) {\n  return (\n    <footer className=\"app-footer\">\n      <button\n        className=\"action-button action-button--delete\"\n        onClick={() => {\n          setShowDeletionConfirmation({\n            message: \"Are you sure you want to delete all?\",\n            show: true,\n            handleOnYes: () => {\n              setTaskList([]);\n            },\n          });\n        }}\n      >\n        <svg\n          width=\"59\"\n          height=\"80\"\n          viewBox=\"0 0 59 80\"\n          className=\"trashcan-icon\"\n        >\n          <use href={`${assetsURL}vectors/trashcan.svg#trashcan`} />\n        </svg>\n        Delete all\n      </button>\n    </footer>\n  );\n}\n","import React from \"react\";\nimport { assetsURL } from \"../../core/core.constants\";\nimport \"./Confirmation.styles.scss\";\n\nexport function Confirmation({ onClose, question, handleOnYes, isOpen }) {\n  const handleOnClose = () => onClose({ message: question, show: false });\n\n  return (\n    <div>\n      <div\n        onClick={handleOnClose}\n        className={`confirmation-wrapper ${\n          isOpen ? \"confirmation-wrapper--open\" : \"\"\n        }`}\n      ></div>\n      <div\n        className={`message-container ${\n          isOpen ? \"message-container--open\" : \"\"\n        }`}\n      >\n        <button className=\"close-button\" onClick={handleOnClose}>\n          <svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\">\n            <use href={`${assetsURL}vectors/cross-icon.svg#cross-icon`} />\n          </svg>\n        </button>\n        <p className=\"delete-confirmation-message\">{question}</p>\n        <div className=\"buttons-confirmation-container\">\n          <button\n            onClick={() => {\n              handleOnYes();\n              handleOnClose();\n            }}\n            className=\"action-button\"\n          >\n            Yes\n          </button>\n          <button onClick={handleOnClose} className=\"action-button\">\n            No\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./Copyright.styles.scss\";\n\nexport function Copyright() {\n  return (\n    <p className=\"copyright-text\">\n      created by <a href=\"https://silpagui.github.io/\">silpagui</a> -\n      devChallenges.io\n    </p>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.styles.scss\";\n\nimport { Nav } from \"../Nav/Nav.component\";\nimport { AddTaskForm } from \"../AddTaskForm/AddTaskForm.component\";\nimport { TaskList } from \"../TaskList/TaskList.component\";\nimport { Footer } from \"../Footer/Footer.component\";\nimport { Confirmation } from \"../Confirmation/Confirmation.component\";\nimport { Copyright } from \"../Copyright/Copyright.component\";\nimport { sections, statusTask } from \"../../core/core.constants\";\nimport {\n  getTaskListFromCache,\n  setTaskListToCache,\n} from \"../../core/core.utils\";\n\nexport function App() {\n  const [activeSection, setActiveSection] = useState(sections.ALL);\n  const [taskList, setTaskList] = useState(getTaskListFromCache() || []);\n  const [task, setTask] = useState(\"\");\n  const [confirmation, setConfirmation] = useState({\n    message: \"\",\n    handleOnYes: () => {},\n    show: false,\n  });\n\n  const filteredTasks = taskList.filter((task) => {\n    const shouldShowCompleted =\n      activeSection === sections.COMPLETED && task.status === statusTask.DONE;\n\n    const shouldShowActive =\n      activeSection === sections.ACTIVE && task.status === statusTask.ACTIVE;\n\n    const shouldShowAll = activeSection === sections.ALL;\n\n    return shouldShowCompleted || shouldShowActive || shouldShowAll;\n  });\n\n  useEffect(\n    function updateCache() {\n      setTaskListToCache(taskList);\n    },\n    [taskList]\n  );\n\n  useEffect(\n    function updateScroll() {\n      const body = document.getElementsByTagName(\"body\");\n      const bodyStyle = body[0].style;\n      bodyStyle.overflow = confirmation.show ? \"hidden\" : \"\";\n    },\n    [confirmation]\n  );\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"content-container\">\n        <h1 className=\"title\">#todo</h1>\n        <Nav\n          activeSection={activeSection}\n          setActiveSection={setActiveSection}\n        />\n\n        <AddTaskForm\n          taskList={taskList}\n          task={task}\n          setTaskList={setTaskList}\n          setTask={setTask}\n        />\n\n        <TaskList\n          taskList={taskList}\n          setTaskList={setTaskList}\n          filteredTasks={filteredTasks}\n          setShowDeleteTaskConfirmation={setConfirmation}\n        />\n        {activeSection === sections.COMPLETED && filteredTasks.length !== 0 && (\n          <Footer\n            setShowDeletionConfirmation={setConfirmation}\n            setTaskList={setTaskList}\n          />\n        )}\n        <Copyright />\n      </div>\n\n      <Confirmation\n        isOpen={confirmation.show}\n        onClose={setConfirmation}\n        question={confirmation.message}\n        handleOnYes={confirmation.handleOnYes}\n      />\n    </div>\n  );\n}\n","import { localStorageKeys } from \"./core.constants\";\n\nexport function getTaskListFromCache() {\n  try {\n    const taskList = localStorage.getItem(localStorageKeys.TASK_LIST);\n    const parsedTaskList = JSON.parse(taskList);\n    return parsedTaskList;\n  } catch (error) {\n    console.warn(\"getTaskListFromCache\", \"Something happened\");\n  }\n}\n\nexport function setTaskListToCache(taskList) {\n  try {\n    localStorage.setItem(\n      localStorageKeys.TASK_LIST,\n      JSON.stringify(\n        taskList.map((task) => {\n          return {\n            id: task.id,\n            status: task.status,\n            title: task.title,\n          };\n        })\n      )\n    );\n  } catch (error) {\n    console.warn(\"setTaskListToCache\", \"Something happened\");\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./components/App/App.component.js\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}